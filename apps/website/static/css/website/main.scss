/* Custom CSS */
@import url('https://fonts.googleapis.com/css2?family=Titillium+Web:ital,wght@0,400;0,700;1,400;1,700&display=swap'); 
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap');

:root {
    --afor-primary: black;
    
    --afor-error: DarkRed;
    --afor-warning: Orange;
    --afor-info: inherit; 
    --afor-success: darkgreen;
    --afor-debug: gray;
}


$titillium: 'Titillium Web', sans-serif;
$open-sans: 'Open Sans', sans-serif;


h1, h2, h3, h4, h5, h6, b, strong { 
    color: var(--afor-primary);
    font-weight: bold;
    font-family: $titillium;
}
h1, h2, h3, b {  }

a { color: var(--afor-primary); }

$sizes: 1rem, 2rem, 4rem, 8rem, 16rem;

@for $index from 1 through 5 {
  $size: nth($sizes, $index);
  .i#{$index} {
    height: $size;
    width: $size;
  }
}


.flex-grow { flex-grow: 1; }
.flex-center {
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.titillium  { font-family: $titillium }
.open-sans  { font-family: $open-sans }


.alert { outline: 1px solid; }
.alert:hover { outline-width: 2px; }

.alert-error    { outline-color: var(--afor-error); color: var(--afor-error); }
.alert-warning  { outline-color: var(--afor-warning); }
.alert-info     { outline-color: var(--afor-info); }
.alert-success  { outline-color: var(--afor-success); color: var(--afor-success); }
.alert-debug    { outline-color: var(--afor-debug); }


.canvas span {
  /* Better solution only available in firefox 
      -webkit-text-stroke: 2px white;    
      paint-order: stroke fill; */
  
  $color: white;
  text-shadow:
     1px 1px 0 $color,
   -1px -1px 0 $color,  
    1px -1px 0 $color,
    -1px 1px 0 $color,
     1px 1px 0 $color;
  
  &:hover { 
    //opacity: .8; 
    $color: silver;
    text-shadow:
       1px 1px 0 $color,
     -1px -1px 0 $color,  
      1px -1px 0 $color,
      -1px 1px 0 $color,
       1px 1px 0 $color;
  }    
}

#location-auto-icon svg{
  color: gray;
  
  &[data-state="disabled"] { color: lightgray; }
  &[data-state="processing"] { color: lightgreen }
  &[data-state="success"] { color: green }
  &[data-state="error"] { color: red }
}

$animation-colors: ("red": rgb(255, 65, 54), "gray": DimGray);

@each $name, $color in $animation-colors {
  @keyframes color-animation--#{$name} {
    from {
      color: white;
    }
    to {
      color: $color;
    }
  }

  .animated--#{$name} {
    background-color: $color;
    animation-name: color-animation--#{$name};
    animation-iteration-count: infinite;
    animation-duration: 1s;
    animation-direction: alternate;
  }
}

.text-shadow {
  $color: black;
  text-shadow:
       1px 1px 0 $color,
     -1px -1px 0 $color,  
      1px -1px 0 $color,
      -1px 1px 0 $color,
       1px 1px 0 $color;
}
